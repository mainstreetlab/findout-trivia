"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/zod-validation-error@3.4.0_zod@3.23.8";
exports.ids = ["vendor-chunks/zod-validation-error@3.4.0_zod@3.23.8"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.23.8/node_modules/zod-validation-error/dist/index.mjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.23.8/node_modules/zod-validation-error/dist/index.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   createMessageBuilder: () => (/* binding */ createMessageBuilder),\n/* harmony export */   errorMap: () => (/* binding */ errorMap),\n/* harmony export */   fromError: () => (/* binding */ fromError),\n/* harmony export */   fromZodError: () => (/* binding */ fromZodError),\n/* harmony export */   fromZodIssue: () => (/* binding */ fromZodIssue),\n/* harmony export */   isValidationError: () => (/* binding */ isValidationError),\n/* harmony export */   isValidationErrorLike: () => (/* binding */ isValidationErrorLike),\n/* harmony export */   isZodErrorLike: () => (/* binding */ isZodErrorLike),\n/* harmony export */   toValidationError: () => (/* binding */ toValidationError)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/.pnpm/zod@3.23.8/node_modules/zod/lib/index.mjs\");\n// lib/isZodErrorLike.ts\nfunction isZodErrorLike(err) {\n  return err instanceof Error && err.name === \"ZodError\" && \"issues\" in err && Array.isArray(err.issues);\n}\n\n// lib/ValidationError.ts\nvar ValidationError = class extends Error {\n  name;\n  details;\n  constructor(message, options) {\n    super(message, options);\n    this.name = \"ZodValidationError\";\n    this.details = getIssuesFromErrorOptions(options);\n  }\n  toString() {\n    return this.message;\n  }\n};\nfunction getIssuesFromErrorOptions(options) {\n  if (options) {\n    const cause = options.cause;\n    if (isZodErrorLike(cause)) {\n      return cause.issues;\n    }\n  }\n  return [];\n}\n\n// lib/isValidationError.ts\nfunction isValidationError(err) {\n  return err instanceof ValidationError;\n}\n\n// lib/isValidationErrorLike.ts\nfunction isValidationErrorLike(err) {\n  return err instanceof Error && err.name === \"ZodValidationError\";\n}\n\n// lib/fromZodIssue.ts\n\n\n// lib/MessageBuilder.ts\n\n\n// lib/utils/NonEmptyArray.ts\nfunction isNonEmptyArray(value) {\n  return value.length !== 0;\n}\n\n// lib/utils/joinPath.ts\nvar identifierRegex = /[$_\\p{ID_Start}][$\\u200c\\u200d\\p{ID_Continue}]*/u;\nfunction joinPath(path) {\n  if (path.length === 1) {\n    return path[0].toString();\n  }\n  return path.reduce((acc, item) => {\n    if (typeof item === \"number\") {\n      return acc + \"[\" + item.toString() + \"]\";\n    }\n    if (item.includes('\"')) {\n      return acc + '[\"' + escapeQuotes(item) + '\"]';\n    }\n    if (!identifierRegex.test(item)) {\n      return acc + '[\"' + item + '\"]';\n    }\n    const separator = acc.length === 0 ? \"\" : \".\";\n    return acc + separator + item;\n  }, \"\");\n}\nfunction escapeQuotes(str) {\n  return str.replace(/\"/g, '\\\\\"');\n}\n\n// lib/config.ts\nvar ISSUE_SEPARATOR = \"; \";\nvar MAX_ISSUES_IN_MESSAGE = 99;\nvar PREFIX = \"Validation error\";\nvar PREFIX_SEPARATOR = \": \";\nvar UNION_SEPARATOR = \", or \";\n\n// lib/MessageBuilder.ts\nfunction createMessageBuilder(props = {}) {\n  const {\n    issueSeparator = ISSUE_SEPARATOR,\n    unionSeparator = UNION_SEPARATOR,\n    prefixSeparator = PREFIX_SEPARATOR,\n    prefix = PREFIX,\n    includePath = true,\n    maxIssuesInMessage = MAX_ISSUES_IN_MESSAGE\n  } = props;\n  return (issues) => {\n    const message = issues.slice(0, maxIssuesInMessage).map(\n      (issue) => getMessageFromZodIssue({\n        issue,\n        issueSeparator,\n        unionSeparator,\n        includePath\n      })\n    ).join(issueSeparator);\n    return prefixMessage(message, prefix, prefixSeparator);\n  };\n}\nfunction getMessageFromZodIssue(props) {\n  const { issue, issueSeparator, unionSeparator, includePath } = props;\n  if (issue.code === zod__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_union) {\n    return issue.unionErrors.reduce((acc, zodError) => {\n      const newIssues = zodError.issues.map(\n        (issue2) => getMessageFromZodIssue({\n          issue: issue2,\n          issueSeparator,\n          unionSeparator,\n          includePath\n        })\n      ).join(issueSeparator);\n      if (!acc.includes(newIssues)) {\n        acc.push(newIssues);\n      }\n      return acc;\n    }, []).join(unionSeparator);\n  }\n  if (issue.code === zod__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_arguments) {\n    return [\n      issue.message,\n      ...issue.argumentsError.issues.map(\n        (issue2) => getMessageFromZodIssue({\n          issue: issue2,\n          issueSeparator,\n          unionSeparator,\n          includePath\n        })\n      )\n    ].join(issueSeparator);\n  }\n  if (issue.code === zod__WEBPACK_IMPORTED_MODULE_0__.ZodIssueCode.invalid_return_type) {\n    return [\n      issue.message,\n      ...issue.returnTypeError.issues.map(\n        (issue2) => getMessageFromZodIssue({\n          issue: issue2,\n          issueSeparator,\n          unionSeparator,\n          includePath\n        })\n      )\n    ].join(issueSeparator);\n  }\n  if (includePath && isNonEmptyArray(issue.path)) {\n    if (issue.path.length === 1) {\n      const identifier = issue.path[0];\n      if (typeof identifier === \"number\") {\n        return `${issue.message} at index ${identifier}`;\n      }\n    }\n    return `${issue.message} at \"${joinPath(issue.path)}\"`;\n  }\n  return issue.message;\n}\nfunction prefixMessage(message, prefix, prefixSeparator) {\n  if (prefix !== null) {\n    if (message.length > 0) {\n      return [prefix, message].join(prefixSeparator);\n    }\n    return prefix;\n  }\n  if (message.length > 0) {\n    return message;\n  }\n  return PREFIX;\n}\n\n// lib/fromZodIssue.ts\nfunction fromZodIssue(issue, options = {}) {\n  const messageBuilder = createMessageBuilderFromOptions(options);\n  const message = messageBuilder([issue]);\n  return new ValidationError(message, { cause: new zod__WEBPACK_IMPORTED_MODULE_0__.ZodError([issue]) });\n}\nfunction createMessageBuilderFromOptions(options) {\n  if (\"messageBuilder\" in options) {\n    return options.messageBuilder;\n  }\n  return createMessageBuilder(options);\n}\n\n// lib/errorMap.ts\nvar errorMap = (issue, ctx) => {\n  const error = fromZodIssue({\n    ...issue,\n    // fallback to the default error message\n    // when issue does not have a message\n    message: issue.message ?? ctx.defaultError\n  });\n  return {\n    message: error.message\n  };\n};\n\n// lib/fromZodError.ts\nfunction fromZodError(zodError, options = {}) {\n  if (!isZodErrorLike(zodError)) {\n    throw new TypeError(\n      `Invalid zodError param; expected instance of ZodError. Did you mean to use the \"${fromError.name}\" method instead?`\n    );\n  }\n  return fromZodErrorWithoutRuntimeCheck(zodError, options);\n}\nfunction fromZodErrorWithoutRuntimeCheck(zodError, options = {}) {\n  const zodIssues = zodError.errors;\n  let message;\n  if (isNonEmptyArray(zodIssues)) {\n    const messageBuilder = createMessageBuilderFromOptions2(options);\n    message = messageBuilder(zodIssues);\n  } else {\n    message = zodError.message;\n  }\n  return new ValidationError(message, { cause: zodError });\n}\nfunction createMessageBuilderFromOptions2(options) {\n  if (\"messageBuilder\" in options) {\n    return options.messageBuilder;\n  }\n  return createMessageBuilder(options);\n}\n\n// lib/toValidationError.ts\nvar toValidationError = (options = {}) => (err) => {\n  if (isZodErrorLike(err)) {\n    return fromZodErrorWithoutRuntimeCheck(err, options);\n  }\n  if (err instanceof Error) {\n    return new ValidationError(err.message, { cause: err });\n  }\n  return new ValidationError(\"Unknown error\");\n};\n\n// lib/fromError.ts\nfunction fromError(err, options = {}) {\n  return toValidationError(options)(err);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/zod-validation-error@3.4.0_zod@3.23.8/node_modules/zod-validation-error/dist/index.mjs\n");

/***/ })

};
;