"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pino-abstract-transport@1.2.0";
exports.ids = ["vendor-chunks/pino-abstract-transport@1.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/pino-abstract-transport@1.2.0/node_modules/pino-abstract-transport/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/pino-abstract-transport@1.2.0/node_modules/pino-abstract-transport/index.js ***!
  \********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst metadata = Symbol.for('pino.metadata')\nconst split = __webpack_require__(/*! split2 */ \"(ssr)/./node_modules/.pnpm/split2@4.2.0/node_modules/split2/index.js\")\nconst { Duplex } = __webpack_require__(/*! readable-stream */ \"(ssr)/./node_modules/.pnpm/readable-stream@4.5.2/node_modules/readable-stream/lib/ours/index.js\")\nconst { parentPort, workerData } = __webpack_require__(/*! worker_threads */ \"worker_threads\")\n\nfunction createDeferred () {\n  let resolve\n  let reject\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n  promise.resolve = resolve\n  promise.reject = reject\n  return promise\n}\n\nmodule.exports = function build (fn, opts = {}) {\n  const waitForConfig = opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig === true\n  const parseLines = opts.parse === 'lines'\n  const parseLine = typeof opts.parseLine === 'function' ? opts.parseLine : JSON.parse\n  const close = opts.close || defaultClose\n  const stream = split(function (line) {\n    let value\n\n    try {\n      value = parseLine(line)\n    } catch (error) {\n      this.emit('unknown', line, error)\n      return\n    }\n\n    if (value === null) {\n      this.emit('unknown', line, 'Null value ignored')\n      return\n    }\n\n    if (typeof value !== 'object') {\n      value = {\n        data: value,\n        time: Date.now()\n      }\n    }\n\n    if (stream[metadata]) {\n      stream.lastTime = value.time\n      stream.lastLevel = value.level\n      stream.lastObj = value\n    }\n\n    if (parseLines) {\n      return line\n    }\n\n    return value\n  }, { autoDestroy: true })\n\n  stream._destroy = function (err, cb) {\n    const promise = close(err, cb)\n    if (promise && typeof promise.then === 'function') {\n      promise.then(cb, cb)\n    }\n  }\n\n  if (opts.expectPinoConfig === true && workerData?.workerData?.pinoWillSendConfig !== true) {\n    setImmediate(() => {\n      stream.emit('error', new Error('This transport is not compatible with the current version of pino. Please upgrade pino to the latest version.'))\n    })\n  }\n\n  if (opts.metadata !== false) {\n    stream[metadata] = true\n    stream.lastTime = 0\n    stream.lastLevel = 0\n    stream.lastObj = null\n  }\n\n  if (waitForConfig) {\n    let pinoConfig = {}\n    const configReceived = createDeferred()\n    parentPort.on('message', function handleMessage (message) {\n      if (message.code === 'PINO_CONFIG') {\n        pinoConfig = message.config\n        configReceived.resolve()\n        parentPort.off('message', handleMessage)\n      }\n    })\n\n    Object.defineProperties(stream, {\n      levels: {\n        get () { return pinoConfig.levels }\n      },\n      messageKey: {\n        get () { return pinoConfig.messageKey }\n      },\n      errorKey: {\n        get () { return pinoConfig.errorKey }\n      }\n    })\n\n    return configReceived.then(finish)\n  }\n\n  return finish()\n\n  function finish () {\n    let res = fn(stream)\n\n    if (res && typeof res.catch === 'function') {\n      res.catch((err) => {\n        stream.destroy(err)\n      })\n\n      // set it to null to not retain a reference to the promise\n      res = null\n    } else if (opts.enablePipelining && res) {\n      return Duplex.from({ writable: stream, readable: res })\n    }\n\n    return stream\n  }\n}\n\nfunction defaultClose (err, cb) {\n  process.nextTick(cb, err)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vcGluby1hYnN0cmFjdC10cmFuc3BvcnRAMS4yLjAvbm9kZV9tb2R1bGVzL3Bpbm8tYWJzdHJhY3QtdHJhbnNwb3J0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0EsY0FBYyxtQkFBTyxDQUFDLG9GQUFRO0FBQzlCLFFBQVEsU0FBUyxFQUFFLG1CQUFPLENBQUMsd0hBQWlCO0FBQzVDLFFBQVEseUJBQXlCLEVBQUUsbUJBQU8sQ0FBQyxzQ0FBZ0I7O0FBRTNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw4Q0FBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUcsSUFBSSxtQkFBbUI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixPQUFPO0FBQ1A7QUFDQSxpQkFBaUI7QUFDakIsT0FBTztBQUNQO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsTUFBTTtBQUNOLDJCQUEyQixpQ0FBaUM7QUFDNUQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2ZpbmRvdXQvLi9ub2RlX21vZHVsZXMvLnBucG0vcGluby1hYnN0cmFjdC10cmFuc3BvcnRAMS4yLjAvbm9kZV9tb2R1bGVzL3Bpbm8tYWJzdHJhY3QtdHJhbnNwb3J0L2luZGV4LmpzPzY5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IG1ldGFkYXRhID0gU3ltYm9sLmZvcigncGluby5tZXRhZGF0YScpXG5jb25zdCBzcGxpdCA9IHJlcXVpcmUoJ3NwbGl0MicpXG5jb25zdCB7IER1cGxleCB9ID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJylcbmNvbnN0IHsgcGFyZW50UG9ydCwgd29ya2VyRGF0YSB9ID0gcmVxdWlyZSgnd29ya2VyX3RocmVhZHMnKVxuXG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZCAoKSB7XG4gIGxldCByZXNvbHZlXG4gIGxldCByZWplY3RcbiAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgIHJlc29sdmUgPSBfcmVzb2x2ZVxuICAgIHJlamVjdCA9IF9yZWplY3RcbiAgfSlcbiAgcHJvbWlzZS5yZXNvbHZlID0gcmVzb2x2ZVxuICBwcm9taXNlLnJlamVjdCA9IHJlamVjdFxuICByZXR1cm4gcHJvbWlzZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkIChmbiwgb3B0cyA9IHt9KSB7XG4gIGNvbnN0IHdhaXRGb3JDb25maWcgPSBvcHRzLmV4cGVjdFBpbm9Db25maWcgPT09IHRydWUgJiYgd29ya2VyRGF0YT8ud29ya2VyRGF0YT8ucGlub1dpbGxTZW5kQ29uZmlnID09PSB0cnVlXG4gIGNvbnN0IHBhcnNlTGluZXMgPSBvcHRzLnBhcnNlID09PSAnbGluZXMnXG4gIGNvbnN0IHBhcnNlTGluZSA9IHR5cGVvZiBvcHRzLnBhcnNlTGluZSA9PT0gJ2Z1bmN0aW9uJyA/IG9wdHMucGFyc2VMaW5lIDogSlNPTi5wYXJzZVxuICBjb25zdCBjbG9zZSA9IG9wdHMuY2xvc2UgfHwgZGVmYXVsdENsb3NlXG4gIGNvbnN0IHN0cmVhbSA9IHNwbGl0KGZ1bmN0aW9uIChsaW5lKSB7XG4gICAgbGV0IHZhbHVlXG5cbiAgICB0cnkge1xuICAgICAgdmFsdWUgPSBwYXJzZUxpbmUobGluZSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5lbWl0KCd1bmtub3duJywgbGluZSwgZXJyb3IpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgIHRoaXMuZW1pdCgndW5rbm93bicsIGxpbmUsICdOdWxsIHZhbHVlIGlnbm9yZWQnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgIHZhbHVlID0ge1xuICAgICAgICBkYXRhOiB2YWx1ZSxcbiAgICAgICAgdGltZTogRGF0ZS5ub3coKVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzdHJlYW1bbWV0YWRhdGFdKSB7XG4gICAgICBzdHJlYW0ubGFzdFRpbWUgPSB2YWx1ZS50aW1lXG4gICAgICBzdHJlYW0ubGFzdExldmVsID0gdmFsdWUubGV2ZWxcbiAgICAgIHN0cmVhbS5sYXN0T2JqID0gdmFsdWVcbiAgICB9XG5cbiAgICBpZiAocGFyc2VMaW5lcykge1xuICAgICAgcmV0dXJuIGxpbmVcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWVcbiAgfSwgeyBhdXRvRGVzdHJveTogdHJ1ZSB9KVxuXG4gIHN0cmVhbS5fZGVzdHJveSA9IGZ1bmN0aW9uIChlcnIsIGNiKSB7XG4gICAgY29uc3QgcHJvbWlzZSA9IGNsb3NlKGVyciwgY2IpXG4gICAgaWYgKHByb21pc2UgJiYgdHlwZW9mIHByb21pc2UudGhlbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcHJvbWlzZS50aGVuKGNiLCBjYilcbiAgICB9XG4gIH1cblxuICBpZiAob3B0cy5leHBlY3RQaW5vQ29uZmlnID09PSB0cnVlICYmIHdvcmtlckRhdGE/LndvcmtlckRhdGE/LnBpbm9XaWxsU2VuZENvbmZpZyAhPT0gdHJ1ZSkge1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICBzdHJlYW0uZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ1RoaXMgdHJhbnNwb3J0IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBwaW5vLiBQbGVhc2UgdXBncmFkZSBwaW5vIHRvIHRoZSBsYXRlc3QgdmVyc2lvbi4nKSlcbiAgICB9KVxuICB9XG5cbiAgaWYgKG9wdHMubWV0YWRhdGEgIT09IGZhbHNlKSB7XG4gICAgc3RyZWFtW21ldGFkYXRhXSA9IHRydWVcbiAgICBzdHJlYW0ubGFzdFRpbWUgPSAwXG4gICAgc3RyZWFtLmxhc3RMZXZlbCA9IDBcbiAgICBzdHJlYW0ubGFzdE9iaiA9IG51bGxcbiAgfVxuXG4gIGlmICh3YWl0Rm9yQ29uZmlnKSB7XG4gICAgbGV0IHBpbm9Db25maWcgPSB7fVxuICAgIGNvbnN0IGNvbmZpZ1JlY2VpdmVkID0gY3JlYXRlRGVmZXJyZWQoKVxuICAgIHBhcmVudFBvcnQub24oJ21lc3NhZ2UnLCBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlIChtZXNzYWdlKSB7XG4gICAgICBpZiAobWVzc2FnZS5jb2RlID09PSAnUElOT19DT05GSUcnKSB7XG4gICAgICAgIHBpbm9Db25maWcgPSBtZXNzYWdlLmNvbmZpZ1xuICAgICAgICBjb25maWdSZWNlaXZlZC5yZXNvbHZlKClcbiAgICAgICAgcGFyZW50UG9ydC5vZmYoJ21lc3NhZ2UnLCBoYW5kbGVNZXNzYWdlKVxuICAgICAgfVxuICAgIH0pXG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhzdHJlYW0sIHtcbiAgICAgIGxldmVsczoge1xuICAgICAgICBnZXQgKCkgeyByZXR1cm4gcGlub0NvbmZpZy5sZXZlbHMgfVxuICAgICAgfSxcbiAgICAgIG1lc3NhZ2VLZXk6IHtcbiAgICAgICAgZ2V0ICgpIHsgcmV0dXJuIHBpbm9Db25maWcubWVzc2FnZUtleSB9XG4gICAgICB9LFxuICAgICAgZXJyb3JLZXk6IHtcbiAgICAgICAgZ2V0ICgpIHsgcmV0dXJuIHBpbm9Db25maWcuZXJyb3JLZXkgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICByZXR1cm4gY29uZmlnUmVjZWl2ZWQudGhlbihmaW5pc2gpXG4gIH1cblxuICByZXR1cm4gZmluaXNoKClcblxuICBmdW5jdGlvbiBmaW5pc2ggKCkge1xuICAgIGxldCByZXMgPSBmbihzdHJlYW0pXG5cbiAgICBpZiAocmVzICYmIHR5cGVvZiByZXMuY2F0Y2ggPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcy5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIHN0cmVhbS5kZXN0cm95KGVycilcbiAgICAgIH0pXG5cbiAgICAgIC8vIHNldCBpdCB0byBudWxsIHRvIG5vdCByZXRhaW4gYSByZWZlcmVuY2UgdG8gdGhlIHByb21pc2VcbiAgICAgIHJlcyA9IG51bGxcbiAgICB9IGVsc2UgaWYgKG9wdHMuZW5hYmxlUGlwZWxpbmluZyAmJiByZXMpIHtcbiAgICAgIHJldHVybiBEdXBsZXguZnJvbSh7IHdyaXRhYmxlOiBzdHJlYW0sIHJlYWRhYmxlOiByZXMgfSlcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyZWFtXG4gIH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdENsb3NlIChlcnIsIGNiKSB7XG4gIHByb2Nlc3MubmV4dFRpY2soY2IsIGVycilcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/pino-abstract-transport@1.2.0/node_modules/pino-abstract-transport/index.js\n");

/***/ })

};
;